/*
 * Copyright (c) 2019 Mastercard
 
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
 
    http://www.apache.org/licenses/LICENSE-2.0
 
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 * Loyalty Benefits API
 * The Loyalty Benefits API provides benefits management including presentment and selection.  It also supports insurance certificate generation for insurance benefits that need certificates.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: loyalty-benefits-support@mastercard.flowdock.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mastercard.developer.loyalty_benefits_client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.mastercard.developer.loyalty_benefits_client.model.EligibilityQuestions;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * BenefitEligibilityQuestions
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-12-30T13:58:23.312-06:00[America/Chicago]")
public class BenefitEligibilityQuestions {
  public static final String SERIALIZED_NAME_DATA = "data";
  @SerializedName(SERIALIZED_NAME_DATA)
  private EligibilityQuestions data = null;

  public static final String SERIALIZED_NAME_EXCP_CD = "excpCd";
  @SerializedName(SERIALIZED_NAME_EXCP_CD)
  private String excpCd;

  public static final String SERIALIZED_NAME_HAS_ERROR = "hasError";
  @SerializedName(SERIALIZED_NAME_HAS_ERROR)
  private Boolean hasError;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public BenefitEligibilityQuestions data(EligibilityQuestions data) {
    this.data = data;
    return this;
  }

   /**
   * Get data
   * @return data
  **/
  @ApiModelProperty(value = "")
  public EligibilityQuestions getData() {
    return data;
  }

  public void setData(EligibilityQuestions data) {
    this.data = data;
  }

  public BenefitEligibilityQuestions excpCd(String excpCd) {
    this.excpCd = excpCd;
    return this;
  }

   /**
   * Get excpCd
   * @return excpCd
  **/
  @ApiModelProperty(example = "BEN7890", value = "")
  public String getExcpCd() {
    return excpCd;
  }

  public void setExcpCd(String excpCd) {
    this.excpCd = excpCd;
  }

  public BenefitEligibilityQuestions hasError(Boolean hasError) {
    this.hasError = hasError;
    return this;
  }

   /**
   * Get hasError
   * @return hasError
  **/
  @ApiModelProperty(example = "false", value = "")
  public Boolean getHasError() {
    return hasError;
  }

  public void setHasError(Boolean hasError) {
    this.hasError = hasError;
  }

  public BenefitEligibilityQuestions message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @ApiModelProperty(example = "BenefitQuestions Assistance", value = "")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BenefitEligibilityQuestions benefitEligibilityQuestions = (BenefitEligibilityQuestions) o;
    return Objects.equals(this.data, benefitEligibilityQuestions.data) &&
        Objects.equals(this.excpCd, benefitEligibilityQuestions.excpCd) &&
        Objects.equals(this.hasError, benefitEligibilityQuestions.hasError) &&
        Objects.equals(this.message, benefitEligibilityQuestions.message);
  }

  @Override
  public int hashCode() {
    return Objects.hash(data, excpCd, hasError, message);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BenefitEligibilityQuestions {\n");
    
    sb.append("    data: ").append(toIndentedString(data)).append("\n");
    sb.append("    excpCd: ").append(toIndentedString(excpCd)).append("\n");
    sb.append("    hasError: ").append(toIndentedString(hasError)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

