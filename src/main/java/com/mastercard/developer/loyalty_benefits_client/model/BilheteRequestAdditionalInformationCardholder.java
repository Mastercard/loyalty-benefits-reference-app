/*
 * Copyright (c) 2019 Mastercard
 
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
 
    http://www.apache.org/licenses/LICENSE-2.0
 
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 * Loyalty Benefits API
 * The Loyalty Benefits API provides benefits management including presentment and selection.  It also supports insurance certificate generation for insurance benefits that need certificates.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: loyalty-benefits-support@mastercard.flowdock.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mastercard.developer.loyalty_benefits_client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Information about the registered user
 */
@ApiModel(description = "Information about the registered user")
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-12-30T13:58:23.312-06:00[America/Chicago]")
public class BilheteRequestAdditionalInformationCardholder {
  public static final String SERIALIZED_NAME_LAST_NAME = "lastName";
  @SerializedName(SERIALIZED_NAME_LAST_NAME)
  private String lastName;

  public static final String SERIALIZED_NAME_CITY = "city";
  @SerializedName(SERIALIZED_NAME_CITY)
  private String city;

  public static final String SERIALIZED_NAME_POSTAL_CODE = "postalCode";
  @SerializedName(SERIALIZED_NAME_POSTAL_CODE)
  private String postalCode;

  public static final String SERIALIZED_NAME_DATE_OF_BIRTH = "dateOfBirth";
  @SerializedName(SERIALIZED_NAME_DATE_OF_BIRTH)
  private String dateOfBirth;

  public static final String SERIALIZED_NAME_FIRST_NAME = "firstName";
  @SerializedName(SERIALIZED_NAME_FIRST_NAME)
  private String firstName;

  public static final String SERIALIZED_NAME_NATIONALITY = "nationality";
  @SerializedName(SERIALIZED_NAME_NATIONALITY)
  private String nationality;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;

  public static final String SERIALIZED_NAME_CPF = "cpf";
  @SerializedName(SERIALIZED_NAME_CPF)
  private String cpf;

  public static final String SERIALIZED_NAME_ADDRESS_LINE1 = "addressLine1";
  @SerializedName(SERIALIZED_NAME_ADDRESS_LINE1)
  private String addressLine1;

  public static final String SERIALIZED_NAME_PHONE_AREA = "phoneArea";
  @SerializedName(SERIALIZED_NAME_PHONE_AREA)
  private String phoneArea;

  public static final String SERIALIZED_NAME_STATE = "state";
  @SerializedName(SERIALIZED_NAME_STATE)
  private String state;

  public static final String SERIALIZED_NAME_NEIGHBORHOOD = "neighborhood";
  @SerializedName(SERIALIZED_NAME_NEIGHBORHOOD)
  private String neighborhood;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;

  public BilheteRequestAdditionalInformationCardholder lastName(String lastName) {
    this.lastName = lastName;
    return this;
  }

  public BilheteRequestAdditionalInformationCardholder(String firstName, String lastName, String dateOfBirth, String nationality, String cpf,
			String addressLine1, String city, String state, String postalCode, String neighborhood, String email,
			String phoneArea, String phone) {
		this.firstName = firstName;
		this.lastName = lastName;
		this.dateOfBirth = dateOfBirth;
		this.nationality = nationality;
		this.cpf = cpf;
		this.addressLine1 = addressLine1;
		this.city = city;
		this.state = state;
		this.postalCode = postalCode;
		this.neighborhood = neighborhood;
		this.email = email;
		this.phoneArea = phoneArea;
		this.phone = phone;
	}
   /**
   * Last name
   * @return lastName
  **/
  @ApiModelProperty(example = "Smith", value = "Last name")
  public String getLastName() {
    return lastName;
  }

  public void setLastName(String lastName) {
    this.lastName = lastName;
  }

  public BilheteRequestAdditionalInformationCardholder city(String city) {
    this.city = city;
    return this;
  }

   /**
   * City
   * @return city
  **/
  @ApiModelProperty(example = "Guarulhos", value = "City")
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }

  public BilheteRequestAdditionalInformationCardholder postalCode(String postalCode) {
    this.postalCode = postalCode;
    return this;
  }

   /**
   * Postal Code
   * @return postalCode
  **/
  @ApiModelProperty(example = "1930288", value = "Postal Code")
  public String getPostalCode() {
    return postalCode;
  }

  public void setPostalCode(String postalCode) {
    this.postalCode = postalCode;
  }

  public BilheteRequestAdditionalInformationCardholder dateOfBirth(String dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
    return this;
  }

   /**
   * Date of birth
   * @return dateOfBirth
  **/
  @ApiModelProperty(example = "1950-01-31", value = "Date of birth")
  public String getDateOfBirth() {
    return dateOfBirth;
  }

  public void setDateOfBirth(String dateOfBirth) {
    this.dateOfBirth = dateOfBirth;
  }

  public BilheteRequestAdditionalInformationCardholder firstName(String firstName) {
    this.firstName = firstName;
    return this;
  }

   /**
   * First name
   * @return firstName
  **/
  @ApiModelProperty(example = "John", value = "First name")
  public String getFirstName() {
    return firstName;
  }

  public void setFirstName(String firstName) {
    this.firstName = firstName;
  }

  public BilheteRequestAdditionalInformationCardholder nationality(String nationality) {
    this.nationality = nationality;
    return this;
  }

   /**
   * Alpha-3 ISO 3166-1 country code
   * @return nationality
  **/
  @ApiModelProperty(example = "BRA", value = "Alpha-3 ISO 3166-1 country code")
  public String getNationality() {
    return nationality;
  }

  public void setNationality(String nationality) {
    this.nationality = nationality;
  }

  public BilheteRequestAdditionalInformationCardholder phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * Phone number
   * @return phone
  **/
  @ApiModelProperty(example = "1111-1111", value = "Phone number")
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }

  public BilheteRequestAdditionalInformationCardholder cpf(String cpf) {
    this.cpf = cpf;
    return this;
  }

   /**
   * Brazilian CPF (Individual Taxpayer Registry Identification)
   * @return cpf
  **/
  @ApiModelProperty(example = "999.999.999-99", value = "Brazilian CPF (Individual Taxpayer Registry Identification)")
  public String getCpf() {
    return cpf;
  }

  public void setCpf(String cpf) {
    this.cpf = cpf;
  }

  public BilheteRequestAdditionalInformationCardholder addressLine1(String addressLine1) {
    this.addressLine1 = addressLine1;
    return this;
  }

   /**
   * Address Line 1
   * @return addressLine1
  **/
  @ApiModelProperty(example = "Rua Francisco Pereira da Silva 1480", value = "Address Line 1")
  public String getAddressLine1() {
    return addressLine1;
  }

  public void setAddressLine1(String addressLine1) {
    this.addressLine1 = addressLine1;
  }

  public BilheteRequestAdditionalInformationCardholder phoneArea(String phoneArea) {
    this.phoneArea = phoneArea;
    return this;
  }

   /**
   * Phone number area code
   * @return phoneArea
  **/
  @ApiModelProperty(example = "11", value = "Phone number area code")
  public String getPhoneArea() {
    return phoneArea;
  }

  public void setPhoneArea(String phoneArea) {
    this.phoneArea = phoneArea;
  }

  public BilheteRequestAdditionalInformationCardholder state(String state) {
    this.state = state;
    return this;
  }

   /**
   * State
   * @return state
  **/
  @ApiModelProperty(example = "SP", value = "State")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public BilheteRequestAdditionalInformationCardholder neighborhood(String neighborhood) {
    this.neighborhood = neighborhood;
    return this;
  }

   /**
   * Neighborhood
   * @return neighborhood
  **/
  @ApiModelProperty(example = "Parque Paulistano", value = "Neighborhood")
  public String getNeighborhood() {
    return neighborhood;
  }

  public void setNeighborhood(String neighborhood) {
    this.neighborhood = neighborhood;
  }

  public BilheteRequestAdditionalInformationCardholder email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Email address
   * @return email
  **/
  @ApiModelProperty(example = "john.smith@mail.com", value = "Email address")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BilheteRequestAdditionalInformationCardholder bilheteRequestAdditionalInformationCardholder = (BilheteRequestAdditionalInformationCardholder) o;
    return Objects.equals(this.lastName, bilheteRequestAdditionalInformationCardholder.lastName) &&
        Objects.equals(this.city, bilheteRequestAdditionalInformationCardholder.city) &&
        Objects.equals(this.postalCode, bilheteRequestAdditionalInformationCardholder.postalCode) &&
        Objects.equals(this.dateOfBirth, bilheteRequestAdditionalInformationCardholder.dateOfBirth) &&
        Objects.equals(this.firstName, bilheteRequestAdditionalInformationCardholder.firstName) &&
        Objects.equals(this.nationality, bilheteRequestAdditionalInformationCardholder.nationality) &&
        Objects.equals(this.phone, bilheteRequestAdditionalInformationCardholder.phone) &&
        Objects.equals(this.cpf, bilheteRequestAdditionalInformationCardholder.cpf) &&
        Objects.equals(this.addressLine1, bilheteRequestAdditionalInformationCardholder.addressLine1) &&
        Objects.equals(this.phoneArea, bilheteRequestAdditionalInformationCardholder.phoneArea) &&
        Objects.equals(this.state, bilheteRequestAdditionalInformationCardholder.state) &&
        Objects.equals(this.neighborhood, bilheteRequestAdditionalInformationCardholder.neighborhood) &&
        Objects.equals(this.email, bilheteRequestAdditionalInformationCardholder.email);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lastName, city, postalCode, dateOfBirth, firstName, nationality, phone, cpf, addressLine1, phoneArea, state, neighborhood, email);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BilheteRequestAdditionalInformationCardholder {\n");
    
    sb.append("    lastName: ").append(toIndentedString(lastName)).append("\n");
    sb.append("    city: ").append(toIndentedString(city)).append("\n");
    sb.append("    postalCode: ").append(toIndentedString(postalCode)).append("\n");
    sb.append("    dateOfBirth: ").append(toIndentedString(dateOfBirth)).append("\n");
    sb.append("    firstName: ").append(toIndentedString(firstName)).append("\n");
    sb.append("    nationality: ").append(toIndentedString(nationality)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    cpf: ").append(toIndentedString(cpf)).append("\n");
    sb.append("    addressLine1: ").append(toIndentedString(addressLine1)).append("\n");
    sb.append("    phoneArea: ").append(toIndentedString(phoneArea)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    neighborhood: ").append(toIndentedString(neighborhood)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

