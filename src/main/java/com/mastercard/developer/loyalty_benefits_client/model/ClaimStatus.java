/*
 * Copyright (c) 2019 Mastercard
 
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
 
    http://www.apache.org/licenses/LICENSE-2.0
 
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 * Loyalty Benefits API
 * The Loyalty Benefits API provides benefits management including presentment and selection.  It also supports insurance certificate generation for insurance benefits that need certificates.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: loyalty-benefits-support@mastercard.flowdock.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mastercard.developer.loyalty_benefits_client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.mastercard.developer.loyalty_benefits_client.model.ClaimFeature;
import com.mastercard.developer.loyalty_benefits_client.model.RequiredClaimDocuments;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ClaimStatus
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-12-30T13:58:23.312-06:00[America/Chicago]")
public class ClaimStatus {
  public static final String SERIALIZED_NAME_FEATURES = "features";
  @SerializedName(SERIALIZED_NAME_FEATURES)
  private List<ClaimFeature> features = null;

  public static final String SERIALIZED_NAME_UPLOAD_DOCUMENTS_URL = "uploadDocumentsUrl";
  @SerializedName(SERIALIZED_NAME_UPLOAD_DOCUMENTS_URL)
  private String uploadDocumentsUrl;

  public static final String SERIALIZED_NAME_REQUIRED_DOCUMENTS = "requiredDocuments";
  @SerializedName(SERIALIZED_NAME_REQUIRED_DOCUMENTS)
  private List<RequiredClaimDocuments> requiredDocuments = null;

  public ClaimStatus features(List<ClaimFeature> features) {
    this.features = features;
    return this;
  }

  public ClaimStatus addFeaturesItem(ClaimFeature featuresItem) {
    if (this.features == null) {
      this.features = new ArrayList<ClaimFeature>();
    }
    this.features.add(featuresItem);
    return this;
  }

   /**
   * Array of insurance claim features associated with the claim
   * @return features
  **/
  @ApiModelProperty(value = "Array of insurance claim features associated with the claim")
  public List<ClaimFeature> getFeatures() {
    return features;
  }

  public void setFeatures(List<ClaimFeature> features) {
    this.features = features;
  }

  public ClaimStatus uploadDocumentsUrl(String uploadDocumentsUrl) {
    this.uploadDocumentsUrl = uploadDocumentsUrl;
    return this;
  }

   /**
   * URL to web page that facilitates uploading documents
   * @return uploadDocumentsUrl
  **/
  @ApiModelProperty(example = "http://example.url.com/...", value = "URL to web page that facilitates uploading documents")
  public String getUploadDocumentsUrl() {
    return uploadDocumentsUrl;
  }

  public void setUploadDocumentsUrl(String uploadDocumentsUrl) {
    this.uploadDocumentsUrl = uploadDocumentsUrl;
  }

  public ClaimStatus requiredDocuments(List<RequiredClaimDocuments> requiredDocuments) {
    this.requiredDocuments = requiredDocuments;
    return this;
  }

  public ClaimStatus addRequiredDocumentsItem(RequiredClaimDocuments requiredDocumentsItem) {
    if (this.requiredDocuments == null) {
      this.requiredDocuments = new ArrayList<RequiredClaimDocuments>();
    }
    this.requiredDocuments.add(requiredDocumentsItem);
    return this;
  }

   /**
   * Array of required documents for this claim
   * @return requiredDocuments
  **/
  @ApiModelProperty(value = "Array of required documents for this claim")
  public List<RequiredClaimDocuments> getRequiredDocuments() {
    return requiredDocuments;
  }

  public void setRequiredDocuments(List<RequiredClaimDocuments> requiredDocuments) {
    this.requiredDocuments = requiredDocuments;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClaimStatus claimStatus = (ClaimStatus) o;
    return Objects.equals(this.features, claimStatus.features) &&
        Objects.equals(this.uploadDocumentsUrl, claimStatus.uploadDocumentsUrl) &&
        Objects.equals(this.requiredDocuments, claimStatus.requiredDocuments);
  }

  @Override
  public int hashCode() {
    return Objects.hash(features, uploadDocumentsUrl, requiredDocuments);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClaimStatus {\n");
    
    sb.append("    features: ").append(toIndentedString(features)).append("\n");
    sb.append("    uploadDocumentsUrl: ").append(toIndentedString(uploadDocumentsUrl)).append("\n");
    sb.append("    requiredDocuments: ").append(toIndentedString(requiredDocuments)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

