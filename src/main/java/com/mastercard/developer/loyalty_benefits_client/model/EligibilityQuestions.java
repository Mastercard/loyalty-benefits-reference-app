/*
 * Copyright (c) 2019 Mastercard
 
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
 
    http://www.apache.org/licenses/LICENSE-2.0
 
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 * Loyalty Benefits API
 * The Loyalty Benefits API provides benefits management including presentment and selection.  It also supports insurance certificate generation for insurance benefits that need certificates.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: loyalty-benefits-support@mastercard.flowdock.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mastercard.developer.loyalty_benefits_client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.mastercard.developer.loyalty_benefits_client.model.Questions;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * EligibilityQuestions
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-12-30T13:58:23.312-06:00[America/Chicago]")
public class EligibilityQuestions {
  public static final String SERIALIZED_NAME_ELIGIBILITYQUESTIONS = "eligibilityquestions";
  @SerializedName(SERIALIZED_NAME_ELIGIBILITYQUESTIONS)
  private List<Questions> eligibilityquestions = null;

  public static final String SERIALIZED_NAME_EXCP_CD = "excpCd";
  @SerializedName(SERIALIZED_NAME_EXCP_CD)
  private String excpCd;

  public static final String SERIALIZED_NAME_MESSAGE = "message";
  @SerializedName(SERIALIZED_NAME_MESSAGE)
  private String message;

  public EligibilityQuestions eligibilityquestions(List<Questions> eligibilityquestions) {
    this.eligibilityquestions = eligibilityquestions;
    return this;
  }

  public EligibilityQuestions addEligibilityquestionsItem(Questions eligibilityquestionsItem) {
    if (this.eligibilityquestions == null) {
      this.eligibilityquestions = new ArrayList<Questions>();
    }
    this.eligibilityquestions.add(eligibilityquestionsItem);
    return this;
  }

   /**
   * Array of benefitQuestions within this sub-category
   * @return eligibilityquestions
  **/
  @ApiModelProperty(value = "Array of benefitQuestions within this sub-category")
  public List<Questions> getEligibilityquestions() {
    return eligibilityquestions;
  }

  public void setEligibilityquestions(List<Questions> eligibilityquestions) {
    this.eligibilityquestions = eligibilityquestions;
  }

  public EligibilityQuestions excpCd(String excpCd) {
    this.excpCd = excpCd;
    return this;
  }

   /**
   * Benefit sub-category name
   * @return excpCd
  **/
  @ApiModelProperty(example = "BEN7890", value = "Benefit sub-category name")
  public String getExcpCd() {
    return excpCd;
  }

  public void setExcpCd(String excpCd) {
    this.excpCd = excpCd;
  }

  public EligibilityQuestions message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Benefit sub-category name
   * @return message
  **/
  @ApiModelProperty(example = "BenefitQuestions Assistance", value = "Benefit sub-category name")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EligibilityQuestions eligibilityQuestions = (EligibilityQuestions) o;
    return Objects.equals(this.eligibilityquestions, eligibilityQuestions.eligibilityquestions) &&
        Objects.equals(this.excpCd, eligibilityQuestions.excpCd) &&
        Objects.equals(this.message, eligibilityQuestions.message);
  }

  @Override
  public int hashCode() {
    return Objects.hash(eligibilityquestions, excpCd, message);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EligibilityQuestions {\n");
    
    sb.append("    eligibilityquestions: ").append(toIndentedString(eligibilityquestions)).append("\n");
    sb.append("    excpCd: ").append(toIndentedString(excpCd)).append("\n");
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

