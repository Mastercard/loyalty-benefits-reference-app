/*Copyright (c) 2019 Mastercard
 
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at
 
    http://www.apache.org/licenses/LICENSE-2.0
 
Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.

 * Loyalty Benefits API
 * The Loyalty Benefits API provides benefits management including presentment and selection.  It also supports insurance certificate generation for insurance benefits that need certificates.
 *
 * OpenAPI spec version: 1.0.0
 * Contact: loyalty-benefits-support@mastercard.flowdock.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.mastercard.developer.loyalty_benefits_client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.mastercard.developer.loyalty_benefits_client.model.Answers;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Questions
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2019-12-30T13:58:23.312-06:00[America/Chicago]")
public class Questions {
  public static final String SERIALIZED_NAME_ANSWERS = "answers";
  @SerializedName(SERIALIZED_NAME_ANSWERS)
  private List<Answers> answers = null;

  public static final String SERIALIZED_NAME_BENEFIT_ID = "benefitId";
  @SerializedName(SERIALIZED_NAME_BENEFIT_ID)
  private String benefitId;

  public static final String SERIALIZED_NAME_DISPLAY_ORDER = "displayOrder";
  @SerializedName(SERIALIZED_NAME_DISPLAY_ORDER)
  private Integer displayOrder;

  public static final String SERIALIZED_NAME_QUALIFYING_ANSWER_ID = "qualifyingAnswerId";
  @SerializedName(SERIALIZED_NAME_QUALIFYING_ANSWER_ID)
  private Integer qualifyingAnswerId;

  public static final String SERIALIZED_NAME_QUESTION_ID = "questionId";
  @SerializedName(SERIALIZED_NAME_QUESTION_ID)
  private String questionId;

  public static final String SERIALIZED_NAME_QUESTION_TEXT = "questionText";
  @SerializedName(SERIALIZED_NAME_QUESTION_TEXT)
  private String questionText;

  public Questions answers(List<Answers> answers) {
    this.answers = answers;
    return this;
  }

  public Questions addAnswersItem(Answers answersItem) {
    if (this.answers == null) {
      this.answers = new ArrayList<Answers>();
    }
    this.answers.add(answersItem);
    return this;
  }

   /**
   * Array of benefits within this sub-category
   * @return answers
  **/
  @ApiModelProperty(value = "Array of benefits within this sub-category")
  public List<Answers> getAnswers() {
    return answers;
  }

  public void setAnswers(List<Answers> answers) {
    this.answers = answers;
  }

  public Questions benefitId(String benefitId) {
    this.benefitId = benefitId;
    return this;
  }

   /**
   * The id of the benefit to retrieve
   * @return benefitId
  **/
  @ApiModelProperty(example = "BEN7890", value = "The id of the benefit to retrieve")
  public String getBenefitId() {
    return benefitId;
  }

  public void setBenefitId(String benefitId) {
    this.benefitId = benefitId;
  }

  public Questions displayOrder(Integer displayOrder) {
    this.displayOrder = displayOrder;
    return this;
  }

   /**
   * Number of offers that can be displayed
   * @return displayOrder
  **/
  @ApiModelProperty(example = "1", value = "Number of offers that can be displayed")
  public Integer getDisplayOrder() {
    return displayOrder;
  }

  public void setDisplayOrder(Integer displayOrder) {
    this.displayOrder = displayOrder;
  }

  public Questions qualifyingAnswerId(Integer qualifyingAnswerId) {
    this.qualifyingAnswerId = qualifyingAnswerId;
    return this;
  }

   /**
   * Number of answerId qualified
   * @return qualifyingAnswerId
  **/
  @ApiModelProperty(example = "1", value = "Number of answerId qualified")
  public Integer getQualifyingAnswerId() {
    return qualifyingAnswerId;
  }

  public void setQualifyingAnswerId(Integer qualifyingAnswerId) {
    this.qualifyingAnswerId = qualifyingAnswerId;
  }

  public Questions questionId(String questionId) {
    this.questionId = questionId;
    return this;
  }

   /**
   * The id of the question to retrieve
   * @return questionId
  **/
  @ApiModelProperty(example = "BEN7890", value = "The id of the question to retrieve")
  public String getQuestionId() {
    return questionId;
  }

  public void setQuestionId(String questionId) {
    this.questionId = questionId;
  }

  public Questions questionText(String questionText) {
    this.questionText = questionText;
    return this;
  }

   /**
   * Benefit questionText
   * @return questionText
  **/
  @ApiModelProperty(example = "BEN7890", value = "Benefit questionText")
  public String getQuestionText() {
    return questionText;
  }

  public void setQuestionText(String questionText) {
    this.questionText = questionText;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Questions questions = (Questions) o;
    return Objects.equals(this.answers, questions.answers) &&
        Objects.equals(this.benefitId, questions.benefitId) &&
        Objects.equals(this.displayOrder, questions.displayOrder) &&
        Objects.equals(this.qualifyingAnswerId, questions.qualifyingAnswerId) &&
        Objects.equals(this.questionId, questions.questionId) &&
        Objects.equals(this.questionText, questions.questionText);
  }

  @Override
  public int hashCode() {
    return Objects.hash(answers, benefitId, displayOrder, qualifyingAnswerId, questionId, questionText);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Questions {\n");
    
    sb.append("    answers: ").append(toIndentedString(answers)).append("\n");
    sb.append("    benefitId: ").append(toIndentedString(benefitId)).append("\n");
    sb.append("    displayOrder: ").append(toIndentedString(displayOrder)).append("\n");
    sb.append("    qualifyingAnswerId: ").append(toIndentedString(qualifyingAnswerId)).append("\n");
    sb.append("    questionId: ").append(toIndentedString(questionId)).append("\n");
    sb.append("    questionText: ").append(toIndentedString(questionText)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

